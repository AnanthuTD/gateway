name: Build, Push, and Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      SERVICE_NAME: flarecast-gateway-service
      DEPLOY_MANIFEST_PATH: k8s/overlays/production/gateway-deploy.prod.yaml
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile.production
          push: true
          tags: |
            ananthutd2003/${{ env.SERVICE_NAME }}:latest
            ananthutd2003/${{ env.SERVICE_NAME }}:${{ github.sha }}
          cache-from: type=registry,ref=ananthutd2003/${{ env.SERVICE_NAME }}:latest
          cache-to: type=inline

      - name: Install kubectl
        run: |
          if ! command -v kubectl &> /dev/null; then
            echo "kubectl not found, installing..."
            curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod +x ./kubectl
            sudo mv ./kubectl /usr/local/bin/kubectl
          else
            echo "kubectl is already installed."
          fi

      - name: Update Image Tag in Infra Repo Manifests
        env:
          INFRA_REPO: github.com/AnanthuTD/FlareCast-infra.git
        run: |
          # Clone the infra repo using the dedicated token
          git clone https://${{ secrets.INFRA_DEPLOY_TOKEN }}@${{ env.INFRA_REPO }} infra
          cd infra
          # Set the remote URL to include the token for future push operations
          git remote set-url origin https://${{ secrets.INFRA_DEPLOY_TOKEN }}@github.com/AnanthuTD/FlareCast-infra
          # Pull the latest changes to ensure we're up-to-date
          git pull origin main

          # Install yq if it's not present
          if ! command -v yq &> /dev/null; then
            echo "yq not found, installing yq..."
            wget -qO /usr/bin/yq https://github.com/mikefarah/yq/releases/download/v4.25.2/yq_linux_amd64 && chmod +x /usr/bin/yq
          fi

          # Update the image field in the Kubernetes manifest
          yq eval ".spec.template.spec.containers[0].image = \"ananthutd2003/${SERVICE_NAME}:${GITHUB_SHA}\"" -i $DEPLOY_MANIFEST_PATH

          # Validate the updated manifest with a dry-run
          # kubectl apply --dry-run=client --validate=false -f $DEPLOY_MANIFEST_PATH

          # Check if there are any changes; if not, skip committing
          if git diff --exit-code; then
            echo "No changes detected, skipping commit."
          else
            # Configure Git user settings
            git config user.name "CI/CD Bot"
            git config user.email "ci-cd@example.com"
            # Commit and push the changes
            git commit -am "Update ${SERVICE_NAME} image to ${GITHUB_SHA}"
            git push origin main
          fi
